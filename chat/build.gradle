buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:2.1.20"
        classpath "org.jetbrains.kotlin:kotlin-serialization:2.1.20"
    }
}

apply plugin: 'kotlin-multiplatform'
apply plugin: 'org.jetbrains.kotlin.plugin.serialization'

kotlin {
    targets {
        js('frontend', IR) {
            browser {
                testTask {
                    enabled = false
                }

                distribution {
                    outputDirectory.set(file("$projectDir/src/backendMain/resources/js"))
                }
                binaries.executable()
            }
        }
        jvm('backend')
    }

    sourceSets.each {
        it.dependencies {
            implementation(project.dependencies.enforcedPlatform("io.ktor:ktor-bom:3.2.2"))
        }
    }

    sourceSets {
        backendMain {
            dependencies {
                implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:2.1.20"
                implementation "io.ktor:ktor-server-netty"
                implementation "io.ktor:ktor-server-websockets"
                implementation "io.ktor:ktor-server-call-logging"
                implementation "io.ktor:ktor-server-default-headers"
                implementation "io.ktor:ktor-server-sessions"
                implementation "ch.qos.logback:logback-classic:1.5.12"
            }
        }

        backendTest {
            dependencies {
                implementation "io.ktor:ktor-server-test-host"
                implementation "io.ktor:ktor-client-websockets"
                implementation "org.jetbrains.kotlin:kotlin-test"
            }
        }

        frontendMain {
            dependencies {
                implementation "org.jetbrains.kotlin:kotlin-stdlib-js"
                implementation "io.ktor:ktor-client-websockets"
                implementation "io.ktor:ktor-client-js"
                implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core-js:1.6.4"
            }
        }
    }
}

repositories {
    mavenCentral()
}

tasks.named("backendProcessResources").configure {
    dependsOn("frontendBrowserProductionWebpack")
    dependsOn("frontendBrowserDistribution")
}

tasks.register("run", JavaExec) {
    dependsOn(frontendBrowserDistribution)
    dependsOn(backendMainClasses)
    mainClass.set("io.ktor.samples.chat.backend.ChatApplicationKt")
    classpath(configurations.backendRuntimeClasspath, backendJar)
    args = []
}
